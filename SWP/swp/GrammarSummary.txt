14 little rules that could

The following grammar parses lots of things that are python like...

Grammar:
    1     program -> block
    2     block -> BLOCKSTART BLOCKEND | BLOCKSTART statement_list BLOCKEND
    3     statement_list -> statement | statement statement_list
    4     statement -> EOL | expression EOL | expression ASSIGNMENT expression EOL
    5     expression -> oldexpression | oldexpression COMMA expression | BRA2 expression KET2
    6     oldexpression -> factorlist | factor COLON expression | factor INFIXOPERATOR expression
    7     factorlist -> factor | factor factorlist
    8     factor -> factoid | factoid dotexpression
    9     factoid -> ID | STRING | NUMBER | bracketedexpression | constructorexpression | factor trailer | factor trailertoo
    10    dotexpression -> DOT factor
    11    bracketedexpression -> BRA KET | BRA expression KET
    12    constructorexpression -> BRA3 KET3 | BRA3 expression KET3
    13    trailer -> BRA2 expression KET2
    14    trailertoo -> COLON EOL block

Lexing terms:
    ignore  ->  '\t'
    BRA  ->  r'\('
    KET  ->  r'\)'
    BRA2  ->  r'\['
    KET2  ->  r'\]'
    BRA3  ->  r'\{'
    KET3  ->  r'\}'
    DOT  ->  r'\.'
    COMMA  ->  r'\,'
    COLON  ->  r':'
    ASSIGNMENT  ->  r'=|[+\-*/|$%^&_~\\`<>:]='
    IGNORE  ->  r'(\s+|\#.*$)'
    STRING  ->  r'"[^"]*"'
    INFIXOPERATOR  ->  r'\->|[+\-*/|!$%^&_~\\`<>]{1,2}|=>|==|<\-|=<|\.\.|::|<>|!='
    ID  ->  r"[']*[@&$%A-Za-z_][A-Za-z_0-9]*[']*"
    BLOCKSTART(t)  ->  r'^\s+'
        # Used to create 3 tokens - BLOCKSTART, BLOCKEND and IGNORE
    NUMBER(t)  ->  r'[-]?\d+'
    error(t) (rest)

Parses all sorts of stuff, pathological case:

    OBJECT tree L_SYSTEM:
        ROOT G
        structure Stk = struct :
            exception EmptyStack_exception
            datatype 'x stack = EmptyStack | push of ('x * 'x stack)
            shape square:
                repeat 4:
                    forward 10
                    rotate 90
                end
            end
        end
        RULES:
            G -> T { A G } { C G } (0.70 .. 0.80)
            G -> T { A G } { B G } (0.80 .. 0.95)
            G -> T { A G } (0.95 .. 1.00)
        ENDRULES
    ENDOBJECT

    if (__name__ == "__main__"):
        import sys
        assign lexonly False
        assign trace False
        for fields in using query:
            SELECT fname, lname, t.phone, tsite.name :
                FROM tcontact, tsite
                WHERE table_contact.objid = "CONTID"
                AND table_site.objid = "SITEID"
            ENDSELECT
        endfor
        if sys.argv[1]:
            assign source open(sys.argv[1]).read()
        else:
            assign source "junk"
        end
    end
